name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            platform: windows
            ext: .exe
          - os: macos-latest
            platform: macos
            ext: ''

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        # 卸载可能存在的过时pathlib包
        pip uninstall pathlib -y || true
        pip install -r requirements.txt
        pip install pyinstaller pillow

    - name: Install Playwright browsers
      shell: bash
      run: |
        playwright install chromium
        playwright install-deps

    - name: Create executable with PyInstaller
      shell: bash
      run: |
        pyinstaller --name="douyou_assistant" \
                    --windowed \
                    --onedir \\\      # 改为目录打包
                    --icon=icon.ico \
                    --add-data="src${{ matrix.os == 'windows-latest' && ';src' || ':src' }}" \
                    --add-data="config${{ matrix.os == 'windows-latest' && ';config' || ':config' }}" \
                    --collect-all playwright \
                    --collect-all PySide6 \
                    --collect-all rich \
                    ${{ matrix.os == 'macos-latest' && '--noupx' || '' }} \
                    gui_main.py

    - name: Create version info
      run: |
        echo "Version: ${{ github.event.inputs.version || github.ref_name }}" > version.txt
        echo "Build Date: $(date)" >> version.txt
        echo "Platform: ${{ matrix.platform }}" >> version.txt

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: douyou_assistant-${{ matrix.platform }}
        path: |
          dist/douyou_assistant${{ matrix.ext }}
          version.txt
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display structure of downloaded files
      run: ls -la ./artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/douyou_assistant-windows/douyou_assistant.exe
          ./artifacts/douyou_assistant-macos/douyou_assistant
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}